import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statistics
from scipy import stats

from dsmodeseparation import a,b,c,d,m,n,k,l,FirstOvertonelmcds,FirstOvertonesmcds,Fundamentallmcds,Fundamentalsmcds

### Determining distances to the LMC and SMC using the generated relations/models ###

## Fundamental Mode Distance determination ##

def FundSMCdsDistance(I, P): # Using the P-L relationship generated by the Fundamental mode SMC Delta Scuti Variables, calculate distances to the LMC.
    dm = ((np.float64(a) * np.float64(np.log10(P))) + np.float64(b))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

def FundLMCdsDistance(I, P): # Using the P-L relationship generated by the Fundamental mode LMC Delta Scuti Variables, calculate distances to the SMC.
    dm = ((np.float64(c) * np.float64(np.log10(P))) + np.float64(d))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

#First Overtone Distance determination

def FOSMCdsDistance(I, P): # Using the P-L relationship generated by the First Overtone SMC Delta Scuti Variables, calculate distances to the LMC.
    dm = ((np.float64(m) * np.float64(np.log10(P))) + np.float64(n))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

def FOLMCdsDistance(I, P): # Using the P-L relationship generated by the First Overtone LMC Delta Scuti Variables, calculate distances to the SMC.
    dm = ((np.float64(k) * np.float64(np.log10(P))) + np.float64(l))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

## Median Distance determination and %Error ##

# SMC Distance Error

def SMCperror(dist):
    print(dist)
    print(np.abs((dist - 62440) / 62440)*100)

# LMC Distance Error

def LMCperror(dist):
    print(dist)
    print(np.abs((dist - 49590) / 49590)*100)

### Distance Return ###

# Fundamental Mode SMC Distances
print("SMC Fund Dist")
print(SMCperror(statistics.median(FundLMCdsDistance(Fundamentalsmcds['I'], Fundamentalsmcds['P1']))))
print(SMCperror(statistics.median(FOSMCdsDistance(Fundamentalsmcds['I'], Fundamentalsmcds['P1']))))
print(SMCperror(statistics.median(FOLMCdsDistance(Fundamentalsmcds['I'], Fundamentalsmcds['P1']))))

# Fundamental Mode LMC Distances
#print("LMC Fund Dist")
#print(LMCperror(statistics.median(FundLMCdsDistance(Fundamentalsmcds['I'], Fundamentalsmcds['P1']))))
#print(LMCperror(statistics.median(FundLMCdsDistance(FirstOvertonesmcds['I'], FirstOvertonesmcds['P2']))))
#print(LMCperror(statistics.median(FundLMCdsDistance(FirstOvertonelmcds['I'], FirstOvertonelmcds['P2']))))

# First Overtone SMC Distances
#print("SMC FO Dist")
#print(SMCperror(statistics.median(FOSMCdsDistance(Fundamentalsmcds['I'], Fundamentalsmcds['P1']))))
#print(SMCperror(statistics.median(FOSMCdsDistance(Fundamentallmcds['I'], Fundamentallmcds['P1']))))
#print(SMCperror(statistics.median(FOSMCdsDistance(FirstOvertonelmcds['I'], FirstOvertonelmcds['P2']))))

# First Overtone LMC Distances
#print("SMC FO Dist")
#print(LMCperror(statistics.median(FOLMCdsDistance(Fundamentalsmcds['I'], Fundamentalsmcds['P1']))))
#print(LMCperror(statistics.median(FOLMCdsDistance(Fundamentallmcds['I'], Fundamentallmcds['P1']))))
#print(LMCperror(statistics.median(FOLMCdsDistance(FirstOvertonesmcds['I'], FirstOvertonesmcds['P2']))))


