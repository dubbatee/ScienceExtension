import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statistics
from scipy import stats

from cephmodeseparation import a,b,c,d,m,n,k,l,FirstOvertonelmcceph,FirstOvertonesmcceph,Fundamentallmcceph,Fundamentalsmcceph

### Determining distances to the LMC and SMC using the generated relations/models ###

## Fundamental Mode Distance determination ##

def FundSMCcephDistance(I, P): # Using the P-L relationship generated by the Fundamental mode SMC Classical Cepheid Variables, calculate distances to the LMC.
    dm = ((np.float64(a) * np.float64(np.log10(P))) + np.float64(b))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

def FundLMCcephDistance(I, P): # Using the P-L relationship generated by the Fundamental mode LMC Classical Cepheid Variables, calculate distances to the SMC.
    dm = ((np.float64(c) * np.float64(np.log10(P))) + np.float64(d))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

#First Overtone Distance determination

def FOSMCcephDistance(I, P): # Using the P-L relationship generated by the First Overtone SMC Classical Cepheid Variables, calculate distances to the LMC.
    dm = ((np.float64(m) * np.float64(np.log10(P))) + np.float64(n))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

def FOLMCcephDistance(I, P): # Using the P-L relationship generated by the First Overtone LMC Classical Cepheid Variables, calculate distances to the SMC.
    dm = ((np.float64(k) * np.float64(np.log10(P))) + np.float64(l))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

## Median Distance determination and %Error ##

# SMC Distance Error

def SMCperror(dist):
    print(dist)
    print(np.abs((dist - 62440) / 62440)*100)

# LMC Distance Error

def LMCperror(dist):
    print(dist)
    print(np.abs((dist - 49590) / 49590)*100)

### Distance Return ###

# Fundamental Mode SMC Distances
print("SMC Fund Dists")
print(SMCperror(statistics.median(FundLMCcephDistance(Fundamentalsmcceph['I'], Fundamentalsmcceph['P1']))))
print(SMCperror(statistics.median(FOSMCcephDistance(Fundamentalsmcceph['I'], Fundamentalsmcceph['P1']))))
print(SMCperror(statistics.median(FOLMCcephDistance(Fundamentalsmcceph['I'], Fundamentalsmcceph['P1']))))

# Fundamental Mode LMC Distances
print("LMC Fund Dists")
print(LMCperror(statistics.median(FundSMCcephDistance(Fundamentallmcceph['I'], Fundamentallmcceph['P1']))))
print(LMCperror(statistics.median(FOSMCcephDistance(Fundamentallmcceph['I'], Fundamentallmcceph['P1']))))
print(LMCperror(statistics.median(FOLMCcephDistance(Fundamentallmcceph['I'], Fundamentallmcceph['P1']))))

# First Overtone SMC Distances
print("SMC FO Dists")
print(SMCperror(statistics.median(FundSMCcephDistance(FirstOvertonesmcceph['I'], FirstOvertonesmcceph['P1']))))
print(SMCperror(statistics.median(FundLMCcephDistance(FirstOvertonesmcceph['I'], FirstOvertonesmcceph['P1']))))
print(SMCperror(statistics.median(FOLMCcephDistance(FirstOvertonesmcceph['I'], FirstOvertonesmcceph['P1']))))
 
# First Overtone LMC Distances
print("LMC FO Dists")
print(LMCperror(statistics.median(FundSMCcephDistance(FirstOvertonelmcceph['I'], FirstOvertonelmcceph['P1']))))
print(LMCperror(statistics.median(FundLMCcephDistance(FirstOvertonelmcceph['I'], FirstOvertonelmcceph['P1']))))
print(LMCperror(statistics.median(FOSMCcephDistance(FirstOvertonelmcceph['I'], FirstOvertonelmcceph['P1']))))

### Intragalactic Distances ###

#importing dataframes#

from intragen import Fundamentalblgceph, FirstOvertoneblgceph, Fundamentaldiskceph, FirstOvertonediskceph

# Accuracy Function #

def star_dist_accuracy(modeldist, truedist):
    return modeldist/truedist*100

Fundamentalblgceph['modeldist'] = FundSMCcephDistance(Fundamentalblgceph['I'], Fundamentalblgceph['P1'])

FirstOvertoneblgceph['modeldist'] = FundSMCcephDistance(FirstOvertoneblgceph['I'], FirstOvertoneblgceph['P1'])

Fundamentaldiskceph['modeldist'] = FundSMCcephDistance(Fundamentaldiskceph['I'], Fundamentaldiskceph['P1'])

FirstOvertonediskceph['modeldist'] = FundSMCcephDistance(FirstOvertonediskceph['I'], FirstOvertonediskceph['P1'])

print(statistics.mean(star_dist_accuracy(Fundamentalblgceph['modeldist'], Fundamentalblgceph['truedist'])))
print(statistics.mean(star_dist_accuracy(FirstOvertoneblgceph['modeldist'], FirstOvertoneblgceph['truedist'])))
print(statistics.mean(star_dist_accuracy(Fundamentaldiskceph['modeldist'], Fundamentaldiskceph['truedist'])))
print(statistics.mean(star_dist_accuracy(FirstOvertonediskceph['modeldist'], FirstOvertonediskceph['truedist'])))

### Intergalactic Distances ###